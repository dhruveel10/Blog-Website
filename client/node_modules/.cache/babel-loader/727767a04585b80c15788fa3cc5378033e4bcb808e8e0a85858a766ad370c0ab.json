{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tutorials\\\\React Tutorials\\\\Blog Portfolio\\\\client\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\n//import {UserContext} from \"../UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [redirect, setRedirect] = useState(false);\nconst LoginPage = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  async function login(ev) {\n    ev.preventDefault();\n    const response = await fetch('http://localhost:4000/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include'\n    });\n    if (response.ok) {\n      response.json().then(userInfo => {\n        //setUserInfo(userInfo);\n        //setRedirect(true);\n      });\n    } else {\n      alert('wrong credentials');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"login\",\n    onSubmit: login,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"username\",\n      value: username,\n      onChange: ev => setUsername(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"password\",\n      value: password,\n      onChange: ev => setPassword(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginPage, \"1VH1WKtCY4wEF2iBjlvknCiq3BE=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useContext","useState","Navigate","jsxDEV","_jsxDEV","redirect","setRedirect","LoginPage","_s","username","setUsername","password","setPassword","login","ev","preventDefault","response","fetch","method","body","JSON","stringify","headers","credentials","ok","json","then","userInfo","alert","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["D:/Tutorials/React Tutorials/Blog Portfolio/client/src/pages/LoginPage.js"],"sourcesContent":["import {useContext, useState} from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\n//import {UserContext} from \"../UserContext\";\r\nconst [redirect,setRedirect] = useState(false);\r\n\r\nconst LoginPage = () => {\r\n    const [username,setUsername] = useState('');\r\n    const [password,setPassword] = useState('');\r\n\r\n    async function login(ev) {\r\n        ev.preventDefault();\r\n        const response = await fetch('http://localhost:4000/login', {\r\n          method: 'POST',\r\n          body: JSON.stringify({username, password}),\r\n          headers: {'Content-Type':'application/json'},\r\n          credentials: 'include',\r\n        });\r\n        if (response.ok) {\r\n          response.json().then(userInfo => {\r\n            //setUserInfo(userInfo);\r\n            //setRedirect(true);\r\n          });\r\n        } else {\r\n          alert('wrong credentials');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"login\" onSubmit={login}>\r\n            <h1>Login</h1>\r\n            <input type=\"text\"\r\n                    placeholder=\"username\"\r\n                    value={username}\r\n                    onChange={ev => setUsername(ev.target.value)}\r\n            />\r\n            <input type=\"password\"\r\n                    placeholder=\"password\"\r\n                    value={password}\r\n                    onChange={ev => setPassword(ev.target.value)}\r\n            />\r\n            <button>Login</button>\r\n        </form>\r\n    );\r\n}\r\n \r\nexport default LoginPage;"],"mappings":";;AAAA,SAAQA,UAAU,EAAEC,QAAQ,QAAO,OAAO;AAC1C,SAAQC,QAAQ,QAAO,kBAAkB;AACzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;AAE9C,MAAMM,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACU,QAAQ,EAACC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE3C,eAAeY,KAAKA,CAACC,EAAE,EAAE;IACrBA,EAAE,CAACC,cAAc,CAAC,CAAC;IACnB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MAC1DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACZ,QAAQ;QAAEE;MAAQ,CAAC,CAAC;MAC1CW,OAAO,EAAE;QAAC,cAAc,EAAC;MAAkB,CAAC;MAC5CC,WAAW,EAAE;IACf,CAAC,CAAC;IACF,IAAIP,QAAQ,CAACQ,EAAE,EAAE;MACfR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAI;QAC/B;QACA;MAAA,CACD,CAAC;IACJ,CAAC,MAAM;MACLC,KAAK,CAAC,mBAAmB,CAAC;IAC5B;EACJ;EAEA,oBACIxB,OAAA;IAAMyB,SAAS,EAAC,OAAO;IAACC,QAAQ,EAAEjB,KAAM;IAAAkB,QAAA,gBACpC3B,OAAA;MAAA2B,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACd/B,OAAA;MAAOgC,IAAI,EAAC,MAAM;MACVC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAE7B,QAAS;MAChB8B,QAAQ,EAAEzB,EAAE,IAAIJ,WAAW,CAACI,EAAE,CAAC0B,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,eACF/B,OAAA;MAAOgC,IAAI,EAAC,UAAU;MACdC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAE3B,QAAS;MAChB4B,QAAQ,EAAEzB,EAAE,IAAIF,WAAW,CAACE,EAAE,CAAC0B,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,eACF/B,OAAA;MAAA2B,QAAA,EAAQ;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEf,CAAC;AAAA3B,EAAA,CAtCKD,SAAS;AAAAkC,EAAA,GAATlC,SAAS;AAwCf,eAAeA,SAAS;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}